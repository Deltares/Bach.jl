---
title: "Julia core"
---

With the term "core", we mean the computational engine of Ribasim. As detailed in the
[usage](usage.qmd) documentation, it is generally used as a command line tool.

The theory is described on the [equations](equations.qmd) page, and more in-depth numerical considerations are described on the [numerical considerations](numerics.qmd) page. As allocation is a large and self-contained part of the Ribasim core, it is described on the separate [allocation](allocation.qmd) page.

The core is implemented in the [Julia programming language](https://julialang.org/), and
can be found in the [Ribasim repository](https://github.com/Deltares/Ribasim) under the
`core/` folder. For developers we also advise to read the
[developer documentation](../contribute/core.qmd).

```{mermaid}
%%| file: ../assets/c4_component_ribasim.mmd
%%| fig-cap: "Component overview of Ribasim"
```

# The simulation loop

`Ribasim.jl` in the above figure can be divided into 3 parts:

- Model initialization
- Running the simulation loop
- Writing the output files

The figure below gives a more detailed description of the simulation loop in the form of a [sequence diagram](https://en.wikipedia.org/wiki/Sequence_diagram).

```{mermaid}
sequenceDiagram
    participant Sim as Process: Ribasim simulation
    participant Param as Data: Parameters
    participant State as Data: State
    participant Optim as Process: Allocation optimization
    loop Simulation loop (OrdinaryDiffEq.jl)
        opt if allocation timestep has passed:<br>Allocation optimization, per allocation network (JuMP.jl, HiGHS)
            Param-->>Optim: Input
            State-->>Optim: Input
            Optim->>Optim: Optimize Basin allocations if below target level
            Optim->>Optim: Optimize User allocation, per priority
            Optim-->>Param: Set allocated flow rates
        end
        State-->>Sim: Input
        Param-->>Sim: Input
        Sim-->>Param: Parameter updates by control
        Sim->>Sim: Compute flows over edges per node type
        Sim-->>Param: Set flows
        Sim->>Sim: Time integration step
        Sim-->>State: Update state
  end
```
