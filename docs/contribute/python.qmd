---
title: "Python tooling development"
---

# Set up the developer environment

## Setting up conda

In order to develop on `ribasim` locally, please follow the following steps:

- Download and install [miniconda](https://docs.conda.io/en/latest/miniconda.html).

- Initialize `conda` by running the following in the `Miniconda prompt`:

```
conda init
```

- Depending on your company settings, you might also have to run the following in a Powershell terminal as administrator:

```
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned
```

## Creating (or updating) the environment

- Create (or update) the environment by executing the following in your terminal:

```
conda env create --file=environment.yml --force
```

## Installing Python packages

- Activate the environment

```
conda activate ribasim
```

In order to develop on `ribasim` locally, execute the following line inside your virtual environment with the repo root as your working directory:

```bash
pip install --editable python/ribasim
pip install --editable python/ribasim_testmodels
```

## Running the tests

If not already done, activate the environment:

```
conda activate ribasim
```

To run the tests execute with `python/ribasim` as your working directory:

```bash
pytest tests
```

## Building the documentation

Run in the docs folder:

```
quartodoc build
```

This will generate the `.qmd` files in `docs/python/reference` for inspection.

## Updating example notebooks

Make sure to run `Clear All Outputs` on the notebook before committing.

## Prepare model input

Before running the Julia tests or building binaries, example model input needs to created.
This is done by running the following Python script:

```
python python/ribasim/tests/conftest.py
```

This places example model input files under `./data/`.
If the example models change, re-run this script.

## Setup Visual Studio Code (optional)

1. Install the [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python), [ruff](https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff) and [autoDocstring](https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring) extensions.

2. Copy `.vscode/settings_template.json` into `.vscode/settings.json`

## How to publish to PyPI

1) Update `__version__` in `ribasim/__init__.py`

2) Open a terminal and run `cd python/ribasim`

3) Activate the ribasim environment with `conda activate ribasim`

4) If present remove dist folder

5) Re-create the wheels:
```
python -m build
```

6) Check the package files:
```
twine check dist/*
```

7) Make a new commit with the updated version number, and push to remote

8) Re-upload the new files:
```
twine upload dist/*
```
