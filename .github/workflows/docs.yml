name: Docs
on:
  push:
    branches: [main]
    paths-ignore: [".teamcity/**"]
  pull_request:
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  publish:
    name: Docs Julia ${{ matrix.julia_version }} - ${{ matrix.arch }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        julia_version:
          - "1.9"
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia_version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/julia-buildpkg@v1
        with:
          project: core

      - uses: julia-actions/cache@v1
        with:
          cache-compiled: "true"
          cache-registries: "true"

      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: ./environment.yml

      - name: Install ribasim-python
        run: pip install --editable python/ribasim

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Check Quarto installation and all engines
        run: quarto check all

      - name: Generate API pages
        working-directory: docs
        # objects.json: https://github.com/machow/quartodoc/issues/63
        run: |
          quartodoc build
          rm objects.json

      - name: Generate Julia docs
        working-directory: docs
        run: |
          julia --project -e "using Pkg; Pkg.instantiate()"
          julia --project make.jl

      - name: Render Quarto Project
        run: "quarto render docs --to html --execute"

      - name: Publish Quarto Project
        if: github.ref == 'refs/heads/main'
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          path: docs
          render: false
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
