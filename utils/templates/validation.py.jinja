# Automatically generated file. Do not modify.

# Table for connectivity
# "Basin": ["LinearResistance"] means that the downstream of basin can be LinearResistance only

connectivity: dict[str, list[str]] = {
{% for n in nodes %}
    '{{n[:name]}}': [
    {% for value in n[:connectivity] %}
        '{{ value }}',
    {% end %}],
{% end %}
}

# Function to validate connection
def can_connect(node_up: str, node_down: str) -> bool:
    if node_up in connectivity:
        return node_down in connectivity[node_up]
    return False

flow_edge_amount: dict[str, list[int]] = {
{% for n in nodes%}
    '{{n[:name]}}': [
        {{ n[:flow_neighbor_bound].in_min }},
        {{ n[:flow_neighbor_bound].in_max }},
        {{ n[:flow_neighbor_bound].out_min }},
        {{ n[:flow_neighbor_bound].out_max }},
    ],
{%end%}
}

control_edge_amount: dict[str, list[int]] = {
{% for n in nodes%}
    '{{n[:name]}}': [
        {{ n[:control_neighbor_bound].in_min }},
        {{ n[:control_neighbor_bound].in_max }},
        {{ n[:control_neighbor_bound].out_min }},
        {{ n[:control_neighbor_bound].out_max }},
    ],
{%end%}
}
