# Automatically generated file. Do not modify.

# Table for connectivity
# "Basin": ["LinearResistance"] means that the downstream of basin can be LinearResistance only

connectivity: dict[str, list[str]] = {
{% for key, values in connectivity.items() %}
    "{{ key }}": [
    {% for value in values %}
        "{{ value }}"{% if not loop.last %},{% endif %}
    {% endfor %}
    ]{% if not loop.last %},{% endif %}
{% endfor %}
}

# Function to validate connection
def can_connect(node_up: str, node_down: str) -> bool:
    if node_up in connectivity:
        return node_down in connectivity[node_up]
    return False

{% for m in models %}
class {{m[:name]}}Schema(_BaseSchema):
    fid: Index[Int32] = pa.Field(default=1, check_name=True, coerce=True)
  {% for f in m[:fields] %}
    {% if (f[2] == "Series[Int32]") %}
    {{ f[1] }}: {{ f[2] }} = pa.Field(nullable={{ f[3] }}, default=0)
    {% else %}
    {{ f[1] }}: {{ f[2] }} = pa.Field(nullable={{ f[3] }})
    {% end %}
  {% end %}
{% end %}
